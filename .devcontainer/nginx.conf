
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;

    upstream myapp1 {
	least_conn;
        server 127.0.0.1:14000;
        server 127.0.0.1:14010;
        server 127.0.0.1:14020;
        server 127.0.0.1:14030;
        server 127.0.0.1:14040;
        server 127.0.0.1:14050;
	server 127.0.0.1:14060;
        server 127.0.0.1:14070;
        server 127.0.0.1:14080;
        server 127.0.0.1:14090;
    }

    server {
        listen 127.0.0.1:3000;

        location / {
            proxy_pass http://myapp1;
        }
    }

    upstream product_backend {
        least_conn;
        server 127.0.0.1:15000;
        server 127.0.0.1:15010;
        server 127.0.0.1:15020;
        server 127.0.0.1:15030;
        server 127.0.0.1:15040;
        server 127.0.0.1:15050;
        server 127.0.0.1:15060;
        server 127.0.0.1:15070;
        server 127.0.0.1:15080;
        server 127.0.0.1:15090;
        server 127.0.0.1:15001;
        server 127.0.0.1:15011;
        server 127.0.0.1:15021;
        server 127.0.0.1:15031;
        server 127.0.0.1:15041;
        server 127.0.0.1:15051;
        server 127.0.0.1:15061;
        server 127.0.0.1:15071;
        server 127.0.0.1:15081;
        server 127.0.0.1:15091;
        server 127.0.0.1:15002;
        server 127.0.0.1:15012;
        server 127.0.0.1:15022;
        server 127.0.0.1:15032;
        server 127.0.0.1:15042;
        server 127.0.0.1:15052;
        server 127.0.0.1:15062;
        server 127.0.0.1:15072;
        server 127.0.0.1:15082;
        server 127.0.0.1:15092;
    }

    server {
        listen 127.0.0.1:3002;

        location / {
            proxy_pass http://product_backend;
        }
    }

    upstream user_backend {
        least_conn;
        server 127.0.0.1:14001;
        server 127.0.0.1:14011;
        server 127.0.0.1:14021;
        server 127.0.0.1:14031;
        server 127.0.0.1:14041;
        server 127.0.0.1:14051;
        server 127.0.0.1:14061;
        server 127.0.0.1:14071;
        server 127.0.0.1:14081;
        server 127.0.0.1:14091;
        server 127.0.0.1:14002;
        server 127.0.0.1:14012;
        server 127.0.0.1:14022;
        server 127.0.0.1:14032;
        server 127.0.0.1:14042;
        server 127.0.0.1:14052;
        server 127.0.0.1:14062;
        server 127.0.0.1:14072;
        server 127.0.0.1:14082;
        server 127.0.0.1:14092;
        server 127.0.0.1:14003;
        server 127.0.0.1:14013;
        server 127.0.0.1:14023;
        server 127.0.0.1:14033;
        server 127.0.0.1:14043;
        server 127.0.0.1:14053;
        server 127.0.0.1:14063;
        server 127.0.0.1:14073;
        server 127.0.0.1:14083;
        server 127.0.0.1:14093;
    }

    server {
        listen 127.0.0.1:3001;

        location / {
            proxy_pass http://user_backend;
        }
    }
}
